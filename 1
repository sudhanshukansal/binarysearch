--------->.  https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/


class Solution {
public:

    int find (vector<vector<int>>& matrix , int n , int mid){ 
        int count =0;
        int mid1;
        int low, high;
        
        for(int i =0 ; i < n ; i++){
            low =0, high = n-1;
        while(high >=low){
            mid1 = (high+low)/2;
            if(matrix[i][mid1] <= mid){
                low =  mid1+1;
                
            }else{
                high = mid1-1;
            }
        }
            count = low+count;
    }
        cout<<"count ="<<count<<endl;
        return count;
}
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int low = matrix[0][0]; // low = minimum
        int n = matrix.size();
        int high = matrix[n-1][n-1] ; // high = maximum
        
        int mid, check;
        while(high >= low){
            mid = low + (high-low)/2;
            check = find(matrix,n , mid);
            if(check < k){
                low = mid+1;
            }else{
                 check = find(matrix , n , mid-1);
                     if(check < k){
                         return mid;
                     }else{
                high = mid-1;
            }
        }
        }
        return mid;    
    }
};
